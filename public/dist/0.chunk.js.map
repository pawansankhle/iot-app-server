{"version":3,"sources":["/home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/models/state.enum.ts","/home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/models/status.enum.ts","/home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/models/type.enum.ts","/home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/add-device/add-device.component.css","/home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/add-device/add-device.component.html","/home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/add-device/add-device.component.ts","/home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/add-device/add-device.route.ts","/home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/device.component.css","/home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/device.component.html","/home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/device.component.ts","/home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/device.module.ts","/home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/device.routing.module.ts"],"names":[],"mappings":";;;;;;;;AAAA,IAAY,KAAmB;AAA/B,WAAY,KAAK;IAAE,6BAAI;IAAE,+BAAK;AAAA,CAAC,EAAnB,KAAK,KAAL,KAAK,QAAc;AAExB,IAAM,UAAU,GAAG,CAAE,IAAI,EAAE,KAAK,CAAE;;;;;;;;;;;ACFzC,IAAY,MAA6B;AAAzC,WAAY,MAAM;IAAE,uCAAQ;IAAE,yCAAS;AAAC,CAAC,EAA7B,MAAM,KAAN,MAAM,QAAuB;AAElC,IAAM,WAAW,GAAG,CAAE,QAAQ,EAAE,SAAS,CAAE;;;;;;;;;;;ACFlD,IAAY,IAAyB;AAArC,WAAY,IAAI;IAAE,mCAAQ;IAAE,mCAAQ;AAAA,CAAC,EAAzB,IAAI,KAAJ,IAAI,QAAqB;AAE9B,IAAM,SAAS,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC;;;;;;;;ACF7C;AACA;;;AAGA;AACA,4DAA6D,oBAAoB,GAAG,mCAAmC,iBAAiB,GAAG;;AAE3I;;;AAGA;AACA,2C;;;;;;;ACXA,83BAA83B,0CAA0C,iZAAiZ,OAAO,mCAAmC,SAAS,0IAA0I,qCAAqC,ggBAAggB,WAAW,qCAAqC,aAAa,iJAAiJ,sCAAsC,2TAA2T,yCAAyC,wgB;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtjF;AACM;AACb;AACE;AACE;AACW;AACnB;AAC4B;AAM9E;IASE,4BAAmB,EAAe,EACf,WAA4B,EAC5B,SAA8B,EAC9B,OAAsB;QAHtB,OAAE,GAAF,EAAE,CAAa;QACf,gBAAW,GAAX,WAAW,CAAiB;QAC5B,cAAS,GAAT,SAAS,CAAqB;QAC9B,YAAO,GAAP,OAAO,CAAe;QAVzC,gBAAW,GAAkB,oEAAS,CAAC;QACvC,iBAAY,GAAkB,sEAAU,CAAC;QACzC,iBAAY,GAAkB,wEAAW,CAAC;QAC1C,aAAQ,GAAY,KAAK,CAAC;QASxB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC3B,CAAC;IAEA,sBAAI,yCAAS;aAAb,cAAiB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,EAAC,CAAC;;;OAAA;IAC1D,sBAAI,oCAAI;aAAR,cAAY,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,EAAC,CAAC;;;OAAA;IAChD,sBAAI,wCAAQ;aAAZ,cAAgB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,EAAC,CAAC;;;OAAA;IACxD,sBAAI,qCAAK;aAAT,cAAa,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,EAAC,CAAC;;;OAAA;IAElD,8CAAiB,GAAjB;QAAA,iBAUC;QATA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC,SAAS,CAAC,kBAAQ;YAC1E,IAAM,UAAU,GAAG,EAAE,CAAC;YACtB,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC1C,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACxB,KAAI,CAAC,UAAU,CAAC,UAAU,CAAC;gBACzB,UAAU,EAAE,UAAU;aACvB,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAEF,sCAAS,GAAT;QAEE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAChC,SAAS,EAAG,CAAC,IAAI,EAAE,kEAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC1C,SAAS,EAAG,CAAC,KAAK,EAAE,kEAAU,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAC3C,WAAW,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,EAAE,kEAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kEAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC/G,MAAM,EAAE,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACvD,OAAO,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1E,QAAQ,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3E,UAAU,EAAG,CAAC,EAAE,EAAE,kEAAU,CAAC,OAAO,CAAC,CAAC,kEAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;SAC3D,CAAC,CAAC;IACL,CAAC;IAED,wCAAW,GAAX,UAAY,MAAM;QAChB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IAGD,qCAAQ,GAAR;IACA,CAAC;IAED,wCAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IA3DU,kBAAkB;QAL9B,+EAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,kHAA0C;YAC1C,iHAAyC;SAC1C,CAAC;6DAUuB,mEAAW,oBAAX,mEAAW,sDACF,mFAAe,oBAAf,mFAAe,sDACjB,4FAAmB,oBAAnB,4FAAmB,sDACrB,sEAAa,oBAAb,sEAAa;OAZ9B,kBAAkB,CA6D9B;IAAD,yBAAC;;CAAA;AA7D8B;;;;;;;;;;;ACXmD;AAE3E,IAAM,eAAe,GAAW;IACnC;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,mGAAkB;QAC7B,WAAW,EAAE,EAAE;QACf,IAAI,EAAE;YACJ,UAAU,EAAE,YAAY;SACzB;KACF;CACF,CAAC;;;;;;;;ACbJ;AACA;;;AAGA;AACA,6CAA8C,2BAA2B,oBAAoB,iCAAiC,iCAAiC,uBAAuB,KAAK,oBAAoB,qBAAqB,wBAAwB,KAAK;;AAEjQ;;;AAGA;AACA,2C;;;;;;;ACXA,8oBAA8oB,mBAAmB,+PAA+P,eAAe,mQAAmQ,eAAe,qQAAqQ,gBAAgB,gKAAgK,2BAA2B,iKAAiK,0Z;;;;;;;;;;;;;;;;;;;;;;ACArvD;AACe;AAIZ;AACL;AAQ3D;IAaE,yBAAoB,IAAuB;QAAvB,SAAI,GAAJ,IAAI,CAAmB;QAZ3C,qBAAgB,GAAG,CAAC,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;QAC3D,mCAAmC;QACnC,eAAU,GAAG,IAAI,6EAAkB,EAAE,CAAC;QAEtC,kBAAa,GAAG,CAAC,CAAC;QAClB,qBAAgB,GAAG,IAAI,CAAC;QACxB,uBAAkB,GAAG,KAAK,CAAC;IAMoB,CAAC;IAEhD,kCAAQ,GAAR;QACE,sEAAsE;QADxE,iBAQC;QALC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,4EAAW,CAAC,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;aAChG,SAAS,CAAC,cAAI;YACb,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAe,GAAf;QACE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,oCAAoC;IACtC,CAAC;IAnBwB;QAAxB,+EAAS,CAAC,uEAAY,CAAC;sDAAY,uEAAY,oBAAZ,uEAAY;sDAAC;IAC7B;QAAnB,+EAAS,CAAC,kEAAO,CAAC;sDAAO,kEAAO,oBAAP,kEAAO;iDAAC;IAVvB,eAAe;QAL3B,+EAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,mGAAsC;YACtC,kGAAqC;SACtC,CAAC;6DAc0B,iFAAiB,oBAAjB,iFAAiB;OAbhC,eAAe,CA6B3B;IAAD,sBAAC;;CAAA;AA7B2B;;;;;;;;;;;;;;;;;;;;;;;ACda;AACM;AACmC;AACpB;AACX;AACiD;AAUpG;IAAA;IAA4B,CAAC;IAAhB,YAAY;QATxB,8EAAQ,CAAC;YACR,OAAO,EAAE;gBACP,qEAAY;gBACZ,mFAAmB;gBACnB,oEAAY;aACb;YACD,OAAO,EAAE,EAAI;YACb,YAAY,EAAE,CAAE,gGAAe,EAAE,kHAAkB,CAAE;SACtD,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;ACfgB;AACc;AACF;AACmB;AAEjE,IAAM,YAAY;IACvB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,0EAAe;QAC1B,WAAW,EAAE,EAAE;QACf,IAAI,EAAE;YACJ,WAAW,EAAE,QAAQ;SACtB;KACA;SACA,4FAAe,CACnB,CAAC;AAWF;IAAA;IAAkC,CAAC;IAAtB,mBAAmB;QAR/B,8EAAQ,CAAC;YACR,OAAO,EAAE;gBACP,qEAAY,CAAC,QAAQ,CAAC,YAAY,CAAC;aACpC;YACD,OAAO,EAAE;gBACP,qEAAY;aACb;SACF,CAAC;OACW,mBAAmB,CAAG;IAAD,0BAAC;CAAA;AAAH","file":"0.chunk.js","sourcesContent":["export enum State {'ON', 'OFF'}\n\nexport const StateArray = [ 'ON', 'OFF' ]\n\n\n\n// WEBPACK FOOTER //\n// /home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/models/state.enum.ts","export enum Status {'ONLINE', 'OFFLINE' }\n\nexport const StatusArray = [ 'ONLINE', 'OFFLINE' ]\n\n\n\n\n// WEBPACK FOOTER //\n// /home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/models/status.enum.ts","export enum Type {'SENSOR', 'BUTTON'}\n\nexport const typeArray = ['SENSOR', 'BUTTON']\n\n\n\n// WEBPACK FOOTER //\n// /home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/models/type.enum.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"mat-card.add-card mat-card-content{\\n margin-top: 16px;\\n}\\nmat-card.add-card mat-form-field{\\n    width: 95%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/add-device/add-device.component.css\n// module id = ../../../../../src/app/shared/modules/device/add-device/add-device.component.css\n// module chunks = 0","module.exports = \"<form [formGroup]=\\\"deviceForm\\\">\\n  <div class=\\\"main-content\\\">\\n      <mat-card class=\\\"add-card\\\">\\n          <mat-card-header>\\n              <mat-card-title>\\n                <button mat-icon-button>\\n                    <mat-icon routerLink=\\\"/device\\\" aria-label=\\\"back to device\\\" class=\\\"zmdi zmdi-arrow-left back-icon\\\"></mat-icon>\\n                </button>\\n                <span class=\\\"title\\\">Add Device</span>\\n              </mat-card-title>\\n          </mat-card-header>\\n          <mat-divider></mat-divider>\\n          <mat-card-content>\\n            \\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\n              <div fxFlex=\\\"50\\\">\\n                  <mat-form-field>\\n                      <input matInput placeholder=\\\"Device Id\\\" [formControl]=\\\"device_id\\\">\\n                      <mat-error *ngIf=\\\"device_id.invalid\\\">{{errMsgSrv.getFormErrorMessage(device_id)}}</mat-error>\\n                    </mat-form-field>\\n              </div>\\n\\n              <div fxFlex=\\\"50\\\">\\n                  <mat-form-field>\\n                      <mat-select placeholder=\\\"Device Type\\\" [formControl]=\\\"type\\\">\\n                          <mat-option  value=\\\"\\\">--please select--</mat-option>\\n                          <mat-option *ngFor=\\\"let dtype of deviceTypes\\\" value=\\\"{{dtype}}\\\">\\n                            {{ dtype }}\\n                          </mat-option>\\n                      </mat-select>\\n                      <mat-error *ngIf=\\\"type.invalid\\\">{{errMsgSrv.getFormErrorMessage(type)}}</mat-error>\\n                    </mat-form-field>\\n              </div>\\n            </div>\\n\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\">\\n                <div fxFlex=\\\"50\\\">\\n                    <mat-form-field>\\n                        <mat-select placeholder=\\\"Device State\\\" [formControl]=\\\"state\\\">\\n                            <mat-option  value=\\\"\\\">--please select--</mat-option>\\n                            <mat-option *ngFor=\\\"let stateItem of deviceStates\\\" value=\\\"{{stateItem}}\\\">\\n                              {{ stateItem }}\\n                            </mat-option>\\n                        </mat-select>\\n                        <mat-error *ngIf=\\\"state.invalid\\\">{{errMsgSrv.getFormErrorMessage(state)}}</mat-error>\\n                      </mat-form-field>\\n                </div>\\n  \\n                <div fxFlex=\\\"50\\\">\\n                    <mat-form-field>\\n                        <input matInput placeholder=\\\"lat,lng\\\" [formControl]=\\\"location\\\">\\n                        <mat-error *ngIf=\\\"location.invalid\\\">{{errMsgSrv.getFormErrorMessage(location)}}</mat-error>\\n                      </mat-form-field>\\n                </div>\\n              </div>\\n\\n          </mat-card-content>\\n          <mat-card-actions>\\n              <span fxFlex></span>\\n              <button mat-button >Cancel</button>\\n              <button mat-raised-button color=\\\"primary\\\" [disabled]=\\\"!deviceForm.valid || disabled\\\" (click)=\\\"onDeviceAdd(deviceForm.value)\\\">Add</button>\\n              <span fxFlex=\\\"3\\\"></span>\\n            </mat-card-actions>\\n    </mat-card>\\n  </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/add-device/add-device.component.html\n// module id = ../../../../../src/app/shared/modules/device/add-device/add-device.component.html\n// module chunks = 0","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup} from '@angular/forms';\nimport { typeArray } from '../../../models/type.enum';\nimport { StateArray } from '../../../models/state.enum';\nimport { StatusArray } from '../../../models/status.enum';\nimport { LocationService } from '../../../services/location.service';\nimport { DeviceService } from '../device.service';\nimport { ErrorMessageService } from '../../../services/error.message.service';\n@Component({\n  selector: 'app-add-device',\n  templateUrl: './add-device.component.html',\n  styleUrls: ['./add-device.component.css']\n})\nexport class AddDeviceComponent implements OnInit, OnDestroy {\n  deviceForm: FormGroup;\n  deviceTypes: Array<String> = typeArray;\n  deviceStates: Array<String> = StateArray;\n  deviceStatus: Array<String> = StatusArray;\n  disabled: Boolean = false;\n  Userlocation: any;\n\n\n  constructor(public fb: FormBuilder,\n              public LocationSrv: LocationService,\n              public errMsgSrv: ErrorMessageService,\n              public service: DeviceService\n            ) {\n    this.buildForm();\n    this.setDeviceLocation();\n  }\n\n   get device_id(){ return this.deviceForm.get('device_id') }\n   get type(){ return this.deviceForm.get('type') }\n   get location(){ return this.deviceForm.get('location') }\n   get state(){ return this.deviceForm.get('state') }\n\n   setDeviceLocation() {\n    this.Userlocation = this.LocationSrv.getCurrentLocation().subscribe(location => {\n      const cordinates = [];\n      cordinates.push(location.coords.latitude);\n      cordinates.push(location.coords.longitude);\n      console.log(cordinates);\n      this.deviceForm.patchValue({\n        'location': cordinates,\n      });\n     });\n   }\n\n  buildForm() {\n\n    this.deviceForm = this.fb.group({\n    'enabled' : [true, Validators.compose([])],\n    'deleted' : [false, Validators.compose([])],\n    'device_id': ['', Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(30)])],\n    'type': ['', Validators.compose([Validators.required])],\n    'state': [this.deviceStates[1], Validators.compose([Validators.required])],\n    'status': [this.deviceStatus[1], Validators.compose([Validators.required])],\n    'location' : ['', Validators.compose([Validators.required])],\n    });\n  }\n\n  onDeviceAdd(device) {\n    console.log(device);\n    this.service.create(device);\n  }\n\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n    this.Userlocation.unsubscribe();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/add-device/add-device.component.ts","\nimport { Routes } from '@angular/router';\nimport { AddDeviceComponent } from '../../device/add-device/add-device.component';\n\nexport const AddDeviceRoutes: Routes = [\n    {\n      path: 'add',\n      component: AddDeviceComponent,\n      canActivate: [],\n      data: {\n        breadcrumb: 'add Device'\n      }\n    },\n  ];\n\n\n\n\n// WEBPACK FOOTER //\n// /home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/add-device/add-device.route.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-direction: column;\\n        flex-direction: column;\\n    min-width: 300px;\\n  }\\n  \\n  .mat-table {\\n    overflow: auto;\\n    max-height: 500px;\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/device.component.css\n// module id = ../../../../../src/app/shared/modules/device/device.component.css\n// module chunks = 0","module.exports = \"\\n\\n<mat-toolbar color=\\\"accent\\\">\\n  <span fxFlex></span>\\n  <span>\\n  <button mat-icon-button routerLink=\\\"/device/add\\\">\\n    <mat-icon class=\\\"zmdi zmdi-plus-square primary-icon\\\"></mat-icon>\\n  </button>\\n  </span>\\n</mat-toolbar>\\n\\n<div class=\\\"main-content\\\">\\n  \\n      <mat-table #table  [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"DeviceId\\\" matSortDisableClear matSortDirection=\\\"asc\\\" >\\n\\n        <!-- Position Column -->\\n        <ng-container matColumnDef=\\\"DeviceId\\\">\\n          <mat-header-cell *matHeaderCellDef  mat-sort-header>DeviceId</mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.device_id}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"Type\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Type </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.type }} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Weight Column -->\\n        <ng-container matColumnDef=\\\"State\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> State </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.state}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Symbol Column -->\\n        <ng-container matColumnDef=\\\"Status\\\">\\n          <mat-header-cell *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n      </mat-table>\\n\\n      <!-- no data show  start-->\\n      <div *ngIf=\\\"dataSource.data.length == 0\\\">\\n        <h3 style=\\\"text-align:center;\\\">\\n            <p>\\n              <img src=\\\"assets/icon/no-data-found.png\\\">\\n            </p>\\n            no data found...\\n        </h3>\\n     </div>\\n     <!-- no data show  end-->\\n\\n    <mat-paginator [hidden]=\\\"dataSource.data.length !== 0\\\" #paginator\\n                  [pageSize]=\\\"10\\\"\\n                  [pageSizeOptions]=\\\"[5, 10, 20]\\\"\\n                  >\\n    </mat-paginator>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/device.component.html\n// module id = ../../../../../src/app/shared/modules/device/device.component.html\n// module chunks = 0","import { Component, OnInit, ViewChild } from '@angular/core';\nimport {MatPaginator, MatTableDataSource, MatSort} from '@angular/material';\nimport { AfterViewInit } from '@angular/core/src/metadata/lifecycle_hooks';\n\nimport { Device } from '../../models/device.model';\nimport { HttpClientService } from '../../services/http.service';\nimport { UrlConstant } from '../../constants/url.constant';\nimport {map} from 'rxjs/operators/map';\n\n@Component({\n  selector: 'app-light',\n  templateUrl: './device.component.html',\n  styleUrls: ['./device.component.css']\n})\nexport class DeviceComponent implements OnInit, AfterViewInit {\n  displayedColumns = ['DeviceId', 'Type', 'State', 'Status'];\n  // 'Enabled', 'Active',  'Location'\n  dataSource = new MatTableDataSource();\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n\n  constructor(private http: HttpClientService) { }\n\n  ngOnInit() {\n    // this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    this.http.getWithPagination(UrlConstant.DEVICE_URL, 'deviceId', 'desc', this.paginator.pageIndex)\n    .subscribe(data => {\n      console.log(data);\n      this.dataSource.data = data;\n    });\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    // this.dataSource.sort = this.sort;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/device.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DeviceComponent } from '../../../shared/modules/device/device.component';\nimport { DeviceRoutingModule } from './device.routing.module';\nimport { SharedModule } from '../../shared.module';\nimport { AddDeviceComponent } from '../../../shared/modules/device/add-device/add-device.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    DeviceRoutingModule,\n    SharedModule\n  ],\n  exports: [  ],\n  declarations: [ DeviceComponent, AddDeviceComponent ]\n})\nexport class DeviceModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/device.module.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DeviceComponent } from './device.component';\nimport { AddDeviceRoutes } from '../device/add-device/add-device.route';\n\nexport const DeviceRoutes: Routes = [\n  {\n    path: '',\n    component: DeviceComponent,\n    canActivate: [],\n    data: {\n      breadcrumbs: 'Device'\n    }\n    },\n  ...AddDeviceRoutes\n];\n\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(DeviceRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class DeviceRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /home/ist/private-workspace/angular/angular-iot/frontend/src/app/shared/modules/device/device.routing.module.ts"],"sourceRoot":"webpack:///"}